Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.InitTask) refers to myinitiation.o(.text.LED_Init) for LED_Init
    main.o(.text.InitTask) refers to myinitiation.o(.text.ADC0_Init) for ADC0_Init
    main.o(.text.InitTask) refers to myinitiation.o(.text.UART0_Init) for UART0_Init
    main.o(.text.InitTask) refers to lcd.o(.text.LCD_init) for LCD_init
    main.o(.text.InitTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.InitTask) refers to main.o(.text.InitTask) for [Anonymous Symbol]
    main.o(.text.Setpoint_Task) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.Setpoint_Task) refers to myinitiation.o(.text.UART_Print) for UART_Print
    main.o(.text.Setpoint_Task) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.Setpoint_Task) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    main.o(.text.Setpoint_Task) refers to sysctl.o(.emb_text) for SysCtlDelay
    main.o(.text.Setpoint_Task) refers to lcd.o(.text.LCD_Command) for LCD_Command
    main.o(.text.Setpoint_Task) refers to atoi.o(.text) for atoi
    main.o(.text.Setpoint_Task) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.Setpoint_Task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Setpoint_Task) refers to main.o(.text.Setpoint_Task) for [Anonymous Symbol]
    main.o(.text.Temp_Measure_Task) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.Temp_Measure_Task) refers to main.o(.data.setpoint) for setpoint
    main.o(.text.Temp_Measure_Task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Temp_Measure_Task) refers to myinitiation.o(.text.itoa) for itoa
    main.o(.text.Temp_Measure_Task) refers to main.o(.bss.temp_C) for temp_C
    main.o(.text.Temp_Measure_Task) refers to myinitiation.o(.text.Toggle_BLUE_LED) for Toggle_BLUE_LED
    main.o(.text.Temp_Measure_Task) refers to main.o(.data.AlarmValue) for AlarmValue
    main.o(.text.Temp_Measure_Task) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.Temp_Measure_Task) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.Temp_Measure_Task) refers to myinitiation.o(.text.Toggle_GREEN_LED) for Toggle_GREEN_LED
    main.o(.text.Temp_Measure_Task) refers to myinitiation.o(.text.Toggle_RED_LED) for Toggle_RED_LED
    main.o(.text.Temp_Measure_Task) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.Temp_Measure_Task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Temp_Measure_Task) refers to main.o(.text.Temp_Measure_Task) for [Anonymous Symbol]
    main.o(.text.Display_Task) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.Display_Task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Display_Task) refers to myinitiation.o(.text.itoa) for itoa
    main.o(.text.Display_Task) refers to main.o(.rodata.str1.1) for .L.str.9
    main.o(.text.Display_Task) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.ARM.exidx.text.Display_Task) refers to main.o(.text.Display_Task) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.main) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.main) refers to main.o(.text.InitTask) for InitTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.10
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.Display_Task) for Display_Task
    main.o(.text.main) refers to main.o(.text.Temp_Measure_Task) for Temp_Measure_Task
    main.o(.text.main) refers to main.o(.text.Setpoint_Task) for Setpoint_Task
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    myinitiation.o(.text.ADCIntRegister) refers to myinitiation.o(.text._ADCIntNumberGet) for _ADCIntNumberGet
    myinitiation.o(.text.ADCIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    myinitiation.o(.text.ADCIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    myinitiation.o(.ARM.exidx.text.ADCIntRegister) refers to myinitiation.o(.text.ADCIntRegister) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text._ADCIntNumberGet) refers to myinitiation.o(.text._ADCIntNumberGet) for [Anonymous Symbol]
    myinitiation.o(.text.ADCIntUnregister) refers to myinitiation.o(.text._ADCIntNumberGet) for _ADCIntNumberGet
    myinitiation.o(.text.ADCIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    myinitiation.o(.text.ADCIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    myinitiation.o(.ARM.exidx.text.ADCIntUnregister) refers to myinitiation.o(.text.ADCIntUnregister) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntDisable) refers to myinitiation.o(.text.ADCIntDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntEnable) refers to myinitiation.o(.text.ADCIntEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntStatus) refers to myinitiation.o(.text.ADCIntStatus) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntClear) refers to myinitiation.o(.text.ADCIntClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceEnable) refers to myinitiation.o(.text.ADCSequenceEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceDisable) refers to myinitiation.o(.text.ADCSequenceDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceConfigure) refers to myinitiation.o(.text.ADCSequenceConfigure) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceStepConfigure) refers to myinitiation.o(.text.ADCSequenceStepConfigure) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceOverflow) refers to myinitiation.o(.text.ADCSequenceOverflow) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceOverflowClear) refers to myinitiation.o(.text.ADCSequenceOverflowClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceUnderflow) refers to myinitiation.o(.text.ADCSequenceUnderflow) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceUnderflowClear) refers to myinitiation.o(.text.ADCSequenceUnderflowClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceDataGet) refers to myinitiation.o(.text.ADCSequenceDataGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCProcessorTrigger) refers to myinitiation.o(.text.ADCProcessorTrigger) for [Anonymous Symbol]
    myinitiation.o(.text.ADCSoftwareOversampleConfigure) refers to myinitiation.o(.bss.g_pui8OversampleFactor) for g_pui8OversampleFactor
    myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleConfigure) refers to myinitiation.o(.text.ADCSoftwareOversampleConfigure) for [Anonymous Symbol]
    myinitiation.o(.text.ADCSoftwareOversampleStepConfigure) refers to myinitiation.o(.bss.g_pui8OversampleFactor) for g_pui8OversampleFactor
    myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleStepConfigure) refers to myinitiation.o(.text.ADCSoftwareOversampleStepConfigure) for [Anonymous Symbol]
    myinitiation.o(.text.ADCSoftwareOversampleDataGet) refers to myinitiation.o(.bss.g_pui8OversampleFactor) for g_pui8OversampleFactor
    myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleDataGet) refers to myinitiation.o(.text.ADCSoftwareOversampleDataGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCHardwareOversampleConfigure) refers to myinitiation.o(.text.ADCHardwareOversampleConfigure) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorConfigure) refers to myinitiation.o(.text.ADCComparatorConfigure) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorRegionSet) refers to myinitiation.o(.text.ADCComparatorRegionSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorReset) refers to myinitiation.o(.text.ADCComparatorReset) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorIntDisable) refers to myinitiation.o(.text.ADCComparatorIntDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorIntEnable) refers to myinitiation.o(.text.ADCComparatorIntEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorIntStatus) refers to myinitiation.o(.text.ADCComparatorIntStatus) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCComparatorIntClear) refers to myinitiation.o(.text.ADCComparatorIntClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntDisableEx) refers to myinitiation.o(.text.ADCIntDisableEx) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntEnableEx) refers to myinitiation.o(.text.ADCIntEnableEx) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntStatusEx) refers to myinitiation.o(.text.ADCIntStatusEx) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCIntClearEx) refers to myinitiation.o(.text.ADCIntClearEx) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCReferenceSet) refers to myinitiation.o(.text.ADCReferenceSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCReferenceGet) refers to myinitiation.o(.text.ADCReferenceGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCPhaseDelaySet) refers to myinitiation.o(.text.ADCPhaseDelaySet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCPhaseDelayGet) refers to myinitiation.o(.text.ADCPhaseDelayGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceDMAEnable) refers to myinitiation.o(.text.ADCSequenceDMAEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCSequenceDMADisable) refers to myinitiation.o(.text.ADCSequenceDMADisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCBusy) refers to myinitiation.o(.text.ADCBusy) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCClockConfigSet) refers to myinitiation.o(.text.ADCClockConfigSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADCClockConfigGet) refers to myinitiation.o(.text.ADCClockConfigGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTParityModeSet) refers to myinitiation.o(.text.UARTParityModeSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTParityModeGet) refers to myinitiation.o(.text.UARTParityModeGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFIFOLevelSet) refers to myinitiation.o(.text.UARTFIFOLevelSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFIFOLevelGet) refers to myinitiation.o(.text.UARTFIFOLevelGet) for [Anonymous Symbol]
    myinitiation.o(.text.UARTConfigSetExpClk) refers to myinitiation.o(.text.UARTDisable) for UARTDisable
    myinitiation.o(.text.UARTConfigSetExpClk) refers to myinitiation.o(.text.UARTEnable) for UARTEnable
    myinitiation.o(.ARM.exidx.text.UARTConfigSetExpClk) refers to myinitiation.o(.text.UARTConfigSetExpClk) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTDisable) refers to myinitiation.o(.text.UARTDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTEnable) refers to myinitiation.o(.text.UARTEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTConfigGetExpClk) refers to myinitiation.o(.text.UARTConfigGetExpClk) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFIFOEnable) refers to myinitiation.o(.text.UARTFIFOEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFIFODisable) refers to myinitiation.o(.text.UARTFIFODisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTEnableSIR) refers to myinitiation.o(.text.UARTEnableSIR) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTDisableSIR) refers to myinitiation.o(.text.UARTDisableSIR) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTSmartCardEnable) refers to myinitiation.o(.text.UARTSmartCardEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTSmartCardDisable) refers to myinitiation.o(.text.UARTSmartCardDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTModemControlSet) refers to myinitiation.o(.text.UARTModemControlSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTModemControlClear) refers to myinitiation.o(.text.UARTModemControlClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTModemControlGet) refers to myinitiation.o(.text.UARTModemControlGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTModemStatusGet) refers to myinitiation.o(.text.UARTModemStatusGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFlowControlSet) refers to myinitiation.o(.text.UARTFlowControlSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTFlowControlGet) refers to myinitiation.o(.text.UARTFlowControlGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTTxIntModeSet) refers to myinitiation.o(.text.UARTTxIntModeSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTTxIntModeGet) refers to myinitiation.o(.text.UARTTxIntModeGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTCharsAvail) refers to myinitiation.o(.text.UARTCharsAvail) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTSpaceAvail) refers to myinitiation.o(.text.UARTSpaceAvail) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTCharGetNonBlocking) refers to myinitiation.o(.text.UARTCharGetNonBlocking) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTCharGet) refers to myinitiation.o(.text.UARTCharGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTCharPutNonBlocking) refers to myinitiation.o(.text.UARTCharPutNonBlocking) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTCharPut) refers to myinitiation.o(.text.UARTCharPut) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTBreakCtl) refers to myinitiation.o(.text.UARTBreakCtl) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTBusy) refers to myinitiation.o(.text.UARTBusy) for [Anonymous Symbol]
    myinitiation.o(.text.UARTIntRegister) refers to myinitiation.o(.text._UARTIntNumberGet) for _UARTIntNumberGet
    myinitiation.o(.text.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    myinitiation.o(.text.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    myinitiation.o(.ARM.exidx.text.UARTIntRegister) refers to myinitiation.o(.text.UARTIntRegister) for [Anonymous Symbol]
    myinitiation.o(.text._UARTIntNumberGet) refers to myinitiation.o(.rodata.g_ppui32UARTIntMap) for g_ppui32UARTIntMap
    myinitiation.o(.text._UARTIntNumberGet) refers to myinitiation.o(.rodata.g_ppui32UARTIntMapSnowflake) for g_ppui32UARTIntMapSnowflake
    myinitiation.o(.ARM.exidx.text._UARTIntNumberGet) refers to myinitiation.o(.text._UARTIntNumberGet) for [Anonymous Symbol]
    myinitiation.o(.text.UARTIntUnregister) refers to myinitiation.o(.text._UARTIntNumberGet) for _UARTIntNumberGet
    myinitiation.o(.text.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    myinitiation.o(.text.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    myinitiation.o(.ARM.exidx.text.UARTIntUnregister) refers to myinitiation.o(.text.UARTIntUnregister) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTIntEnable) refers to myinitiation.o(.text.UARTIntEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTIntDisable) refers to myinitiation.o(.text.UARTIntDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTIntStatus) refers to myinitiation.o(.text.UARTIntStatus) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTIntClear) refers to myinitiation.o(.text.UARTIntClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTDMAEnable) refers to myinitiation.o(.text.UARTDMAEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTDMADisable) refers to myinitiation.o(.text.UARTDMADisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTRxErrorGet) refers to myinitiation.o(.text.UARTRxErrorGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTRxErrorClear) refers to myinitiation.o(.text.UARTRxErrorClear) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTClockSourceSet) refers to myinitiation.o(.text.UARTClockSourceSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTClockSourceGet) refers to myinitiation.o(.text.UARTClockSourceGet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UART9BitEnable) refers to myinitiation.o(.text.UART9BitEnable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UART9BitDisable) refers to myinitiation.o(.text.UART9BitDisable) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UART9BitAddrSet) refers to myinitiation.o(.text.UART9BitAddrSet) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UART9BitAddrSend) refers to myinitiation.o(.text.UART9BitAddrSend) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.UARTLoopbackEnable) refers to myinitiation.o(.text.UARTLoopbackEnable) for [Anonymous Symbol]
    myinitiation.o(.text.LED_Init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    myinitiation.o(.text.LED_Init) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    myinitiation.o(.text.LED_Init) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    myinitiation.o(.ARM.exidx.text.LED_Init) refers to myinitiation.o(.text.LED_Init) for [Anonymous Symbol]
    myinitiation.o(.text.Toggle_BLUE_LED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    myinitiation.o(.ARM.exidx.text.Toggle_BLUE_LED) refers to myinitiation.o(.text.Toggle_BLUE_LED) for [Anonymous Symbol]
    myinitiation.o(.text.Toggle_GREEN_LED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    myinitiation.o(.ARM.exidx.text.Toggle_GREEN_LED) refers to myinitiation.o(.text.Toggle_GREEN_LED) for [Anonymous Symbol]
    myinitiation.o(.text.Toggle_RED_LED) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    myinitiation.o(.ARM.exidx.text.Toggle_RED_LED) refers to myinitiation.o(.text.Toggle_RED_LED) for [Anonymous Symbol]
    myinitiation.o(.ARM.exidx.text.ADC0_Init) refers to myinitiation.o(.text.ADC0_Init) for [Anonymous Symbol]
    myinitiation.o(.text.UART0_Init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    myinitiation.o(.text.UART0_Init) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    myinitiation.o(.text.UART0_Init) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    myinitiation.o(.text.UART0_Init) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    myinitiation.o(.text.UART0_Init) refers to myinitiation.o(.text.UARTDisable) for UARTDisable
    myinitiation.o(.text.UART0_Init) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    myinitiation.o(.text.UART0_Init) refers to myinitiation.o(.text.UARTConfigSetExpClk) for UARTConfigSetExpClk
    myinitiation.o(.text.UART0_Init) refers to myinitiation.o(.text.UARTEnable) for UARTEnable
    myinitiation.o(.text.UART0_Init) refers to myinitiation.o(.text.UARTFIFODisable) for UARTFIFODisable
    myinitiation.o(.ARM.exidx.text.UART0_Init) refers to myinitiation.o(.text.UART0_Init) for [Anonymous Symbol]
    myinitiation.o(.text.itoa) refers to myinitiation.o(.rodata.str1.1) for .L.str
    myinitiation.o(.ARM.exidx.text.itoa) refers to myinitiation.o(.text.itoa) for [Anonymous Symbol]
    myinitiation.o(.text.UART_Print) refers to myinitiation.o(.text.UARTCharPut) for UARTCharPut
    myinitiation.o(.ARM.exidx.text.UART_Print) refers to myinitiation.o(.text.UART_Print) for [Anonymous Symbol]
    lcd.o(.text.LCD_init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.LCD_init) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.LCD_init) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_init) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.text.LCD_Command) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_Command) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Command) refers to lcd.o(.text.LCD_Command) for [Anonymous Symbol]
    lcd.o(.text.LCD_Show) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_Show) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Show) refers to lcd.o(.text.LCD_Show) for [Anonymous Symbol]
    lcd.o(.text.LCD_Cursor) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_Cursor) refers to lcd.o(.text.LCD_Cursor) for [Anonymous Symbol]
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Cursor) for LCD_Cursor
    lcd.o(.text.LCD_Print) refers to strlen.o(.text) for strlen
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Show) for LCD_Show
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Command) for LCD_Command
    lcd.o(.ARM.exidx.text.LCD_Print) refers to lcd.o(.text.LCD_Print) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    atoi.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtol.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.InitTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.Setpoint_Task), (8 bytes).
    Removing main.o(.ARM.exidx.text.Temp_Measure_Task), (8 bytes).
    Removing main.o(.ARM.exidx.text.Display_Task), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing myinitiation.o(.text), (0 bytes).
    Removing myinitiation.o(.text.ADCIntRegister), (38 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntRegister), (8 bytes).
    Removing myinitiation.o(.text._ADCIntNumberGet), (156 bytes).
    Removing myinitiation.o(.ARM.exidx.text._ADCIntNumberGet), (8 bytes).
    Removing myinitiation.o(.text.ADCIntUnregister), (34 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntUnregister), (8 bytes).
    Removing myinitiation.o(.text.ADCIntDisable), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntDisable), (8 bytes).
    Removing myinitiation.o(.text.ADCIntEnable), (36 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntEnable), (8 bytes).
    Removing myinitiation.o(.text.ADCIntStatus), (100 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntStatus), (8 bytes).
    Removing myinitiation.o(.text.ADCIntClear), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntClear), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceEnable), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceEnable), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceDisable), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceDisable), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceConfigure), (136 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceStepConfigure), (226 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceStepConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceOverflow), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceOverflow), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceOverflowClear), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceOverflowClear), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceUnderflow), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceUnderflow), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceUnderflowClear), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceUnderflowClear), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceDataGet), (90 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceDataGet), (8 bytes).
    Removing myinitiation.o(.text.ADCProcessorTrigger), (40 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCProcessorTrigger), (8 bytes).
    Removing myinitiation.o(.text.ADCSoftwareOversampleConfigure), (96 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCSoftwareOversampleStepConfigure), (232 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleStepConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCSoftwareOversampleDataGet), (158 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSoftwareOversampleDataGet), (8 bytes).
    Removing myinitiation.o(.text.ADCHardwareOversampleConfigure), (50 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCHardwareOversampleConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorConfigure), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorConfigure), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorRegionSet), (34 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorRegionSet), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorReset), (86 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorReset), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorIntDisable), (28 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorIntDisable), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorIntEnable), (28 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorIntEnable), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorIntStatus), (12 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorIntStatus), (8 bytes).
    Removing myinitiation.o(.text.ADCComparatorIntClear), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCComparatorIntClear), (8 bytes).
    Removing myinitiation.o(.text.ADCIntDisableEx), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntDisableEx), (8 bytes).
    Removing myinitiation.o(.text.ADCIntEnableEx), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntEnableEx), (8 bytes).
    Removing myinitiation.o(.text.ADCIntStatusEx), (60 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntStatusEx), (8 bytes).
    Removing myinitiation.o(.text.ADCIntClearEx), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCIntClearEx), (8 bytes).
    Removing myinitiation.o(.text.ADCReferenceSet), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCReferenceSet), (8 bytes).
    Removing myinitiation.o(.text.ADCReferenceGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCReferenceGet), (8 bytes).
    Removing myinitiation.o(.text.ADCPhaseDelaySet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCPhaseDelaySet), (8 bytes).
    Removing myinitiation.o(.text.ADCPhaseDelayGet), (12 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCPhaseDelayGet), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceDMAEnable), (28 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceDMAEnable), (8 bytes).
    Removing myinitiation.o(.text.ADCSequenceDMADisable), (28 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCSequenceDMADisable), (8 bytes).
    Removing myinitiation.o(.text.ADCBusy), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCBusy), (8 bytes).
    Removing myinitiation.o(.text.ADCClockConfigSet), (44 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCClockConfigSet), (8 bytes).
    Removing myinitiation.o(.text.ADCClockConfigGet), (78 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADCClockConfigGet), (8 bytes).
    Removing myinitiation.o(.text.UARTParityModeSet), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTParityModeSet), (8 bytes).
    Removing myinitiation.o(.text.UARTParityModeGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTParityModeGet), (8 bytes).
    Removing myinitiation.o(.text.UARTFIFOLevelSet), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFIFOLevelSet), (8 bytes).
    Removing myinitiation.o(.text.UARTFIFOLevelGet), (38 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFIFOLevelGet), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTConfigSetExpClk), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTDisable), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTEnable), (8 bytes).
    Removing myinitiation.o(.text.UARTConfigGetExpClk), (80 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTConfigGetExpClk), (8 bytes).
    Removing myinitiation.o(.text.UARTFIFOEnable), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFIFOEnable), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFIFODisable), (8 bytes).
    Removing myinitiation.o(.text.UARTEnableSIR), (46 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTEnableSIR), (8 bytes).
    Removing myinitiation.o(.text.UARTDisableSIR), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTDisableSIR), (8 bytes).
    Removing myinitiation.o(.text.UARTSmartCardEnable), (46 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTSmartCardEnable), (8 bytes).
    Removing myinitiation.o(.text.UARTSmartCardDisable), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTSmartCardDisable), (8 bytes).
    Removing myinitiation.o(.text.UARTModemControlSet), (34 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTModemControlSet), (8 bytes).
    Removing myinitiation.o(.text.UARTModemControlClear), (38 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTModemControlClear), (8 bytes).
    Removing myinitiation.o(.text.UARTModemControlGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTModemControlGet), (8 bytes).
    Removing myinitiation.o(.text.UARTModemStatusGet), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTModemStatusGet), (8 bytes).
    Removing myinitiation.o(.text.UARTFlowControlSet), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFlowControlSet), (8 bytes).
    Removing myinitiation.o(.text.UARTFlowControlGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTFlowControlGet), (8 bytes).
    Removing myinitiation.o(.text.UARTTxIntModeSet), (26 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTTxIntModeSet), (8 bytes).
    Removing myinitiation.o(.text.UARTTxIntModeGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTTxIntModeGet), (8 bytes).
    Removing myinitiation.o(.text.UARTCharsAvail), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTCharsAvail), (8 bytes).
    Removing myinitiation.o(.text.UARTSpaceAvail), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTSpaceAvail), (8 bytes).
    Removing myinitiation.o(.text.UARTCharGetNonBlocking), (38 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTCharGetNonBlocking), (8 bytes).
    Removing myinitiation.o(.text.UARTCharGet), (28 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTCharGet), (8 bytes).
    Removing myinitiation.o(.text.UARTCharPutNonBlocking), (52 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTCharPutNonBlocking), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTCharPut), (8 bytes).
    Removing myinitiation.o(.text.UARTBreakCtl), (52 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTBreakCtl), (8 bytes).
    Removing myinitiation.o(.text.UARTBusy), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTBusy), (8 bytes).
    Removing myinitiation.o(.text.UARTIntRegister), (34 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntRegister), (8 bytes).
    Removing myinitiation.o(.text._UARTIntNumberGet), (132 bytes).
    Removing myinitiation.o(.ARM.exidx.text._UARTIntNumberGet), (8 bytes).
    Removing myinitiation.o(.text.UARTIntUnregister), (30 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntUnregister), (8 bytes).
    Removing myinitiation.o(.text.UARTIntEnable), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntEnable), (8 bytes).
    Removing myinitiation.o(.text.UARTIntDisable), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntDisable), (8 bytes).
    Removing myinitiation.o(.text.UARTIntStatus), (40 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntStatus), (8 bytes).
    Removing myinitiation.o(.text.UARTIntClear), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTIntClear), (8 bytes).
    Removing myinitiation.o(.text.UARTDMAEnable), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTDMAEnable), (8 bytes).
    Removing myinitiation.o(.text.UARTDMADisable), (20 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTDMADisable), (8 bytes).
    Removing myinitiation.o(.text.UARTRxErrorGet), (16 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTRxErrorGet), (8 bytes).
    Removing myinitiation.o(.text.UARTRxErrorClear), (14 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTRxErrorClear), (8 bytes).
    Removing myinitiation.o(.text.UARTClockSourceSet), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTClockSourceSet), (8 bytes).
    Removing myinitiation.o(.text.UARTClockSourceGet), (14 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTClockSourceGet), (8 bytes).
    Removing myinitiation.o(.text.UART9BitEnable), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART9BitEnable), (8 bytes).
    Removing myinitiation.o(.text.UART9BitDisable), (22 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART9BitDisable), (8 bytes).
    Removing myinitiation.o(.text.UART9BitAddrSet), (36 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART9BitAddrSet), (8 bytes).
    Removing myinitiation.o(.text.UART9BitAddrSend), (82 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART9BitAddrSend), (8 bytes).
    Removing myinitiation.o(.text.UARTLoopbackEnable), (18 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UARTLoopbackEnable), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.Toggle_BLUE_LED), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.Toggle_GREEN_LED), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.Toggle_RED_LED), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.ADC0_Init), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART0_Init), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.itoa), (8 bytes).
    Removing myinitiation.o(.ARM.exidx.text.UART_Print), (8 bytes).
    Removing myinitiation.o(.bss.g_pui8OversampleFactor), (6 bytes).
    Removing myinitiation.o(.rodata.g_ppui32UARTIntMap), (64 bytes).
    Removing myinitiation.o(.rodata.g_ppui32UARTIntMapSnowflake), (64 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Command), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Show), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Cursor), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Print), (8 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (132 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (556 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (102 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (424 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (366 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (298 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (320 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (422 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (114 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (282 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (320 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (442 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (514 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (344 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing cpu.o(.emb_text), (38 bytes).

532 unused section(s) (total 22474 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    MyInitiation.c                           0x00000000   Number         0  myinitiation.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x00000280   Section        6  sysctl.o(.emb_text)
    $v0                                      0x00000288   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000288   Section      252  startup_tm4c123.o(.text)
    .text                                    0x00000384   Section        0  memcpya.o(.text)
    .text                                    0x000003a8   Section        0  memseta.o(.text)
    .text                                    0x000003cc   Section        0  strlen.o(.text)
    .text                                    0x000003da   Section        0  atoi.o(.text)
    .text                                    0x000003f4   Section        0  strtol.o(.text)
    .text                                    0x00000464   Section       36  init.o(.text)
    .text                                    0x00000488   Section        0  ctype_o.o(.text)
    .text                                    0x00000490   Section        0  _strtoul.o(.text)
    .text                                    0x0000052e   Section        0  _chval.o(.text)
    [Anonymous Symbol]                       0x0000054c   Section        0  myinitiation.o(.text.ADC0_Init)
    [Anonymous Symbol]                       0x000005e4   Section        0  main.o(.text.Display_Task)
    [Anonymous Symbol]                       0x00000648   Section        0  main.o(.text.InitTask)
    [Anonymous Symbol]                       0x00000664   Section        0  lcd.o(.text.LCD_Command)
    [Anonymous Symbol]                       0x000006fc   Section        0  lcd.o(.text.LCD_Cursor)
    [Anonymous Symbol]                       0x00000734   Section        0  lcd.o(.text.LCD_Print)
    [Anonymous Symbol]                       0x00000790   Section        0  lcd.o(.text.LCD_Show)
    [Anonymous Symbol]                       0x00000828   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x0000092c   Section        0  myinitiation.o(.text.LED_Init)
    [Anonymous Symbol]                       0x00000960   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000009c0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000009d0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000009f0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000009f4   Section        0  main.o(.text.Setpoint_Task)
    [Anonymous Symbol]                       0x00000b00   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000b3c   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000c48   Section        0  main.o(.text.Temp_Measure_Task)
    [Anonymous Symbol]                       0x00000da0   Section        0  myinitiation.o(.text.Toggle_BLUE_LED)
    [Anonymous Symbol]                       0x00000dd0   Section        0  myinitiation.o(.text.Toggle_GREEN_LED)
    [Anonymous Symbol]                       0x00000e00   Section        0  myinitiation.o(.text.Toggle_RED_LED)
    [Anonymous Symbol]                       0x00000e30   Section        0  myinitiation.o(.text.UART0_Init)
    [Anonymous Symbol]                       0x00000ebc   Section        0  myinitiation.o(.text.UARTCharPut)
    [Anonymous Symbol]                       0x00000ee0   Section        0  myinitiation.o(.text.UARTConfigSetExpClk)
    [Anonymous Symbol]                       0x00000f54   Section        0  myinitiation.o(.text.UARTDisable)
    [Anonymous Symbol]                       0x00000f84   Section        0  myinitiation.o(.text.UARTEnable)
    [Anonymous Symbol]                       0x00000fa4   Section        0  myinitiation.o(.text.UARTFIFODisable)
    [Anonymous Symbol]                       0x00000fb8   Section        0  myinitiation.o(.text.UART_Print)
    [Anonymous Symbol]                       0x00000fe4   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00001064   Section        0  myinitiation.o(.text.itoa)
    [Anonymous Symbol]                       0x00001124   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000011fd   Thumb Code   252  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000011fc   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000012f9   Thumb Code   278  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000012f8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00001411   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001410   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x0000146d   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x0000146c   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000014b1   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000014b0   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x0000157d   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x0000157c   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x00001595   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00001594   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvIdleTask                              0x00001611   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001610   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x000016ad   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000016ac   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000016fd   Thumb Code   296  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000016fc   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001825   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001824   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvIsQueueEmpty                          0x000018b5   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000018b4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000018dd   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000018dc   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x0000190d   Thumb Code   216  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000190c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x000019e5   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000019e4   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x00001a0d   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001a0c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x00001a49   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001a48   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00001a95   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001a94   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001b60   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001c20   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001c80   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001cc8   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001cf8   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001d08   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00001d74   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00001db1   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001db0   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001dc4   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00001e1c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001e68   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001e8c   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001f04   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002110   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002134   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002144   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002188   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002234   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002280   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x000023fc   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x0000240c   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000240c   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000024cc   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002624   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000026f0   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x000027ac   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002a20   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002bfc   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00002cf8   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002d90   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002dc8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002f80   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0000307c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003144   Section        0  tasks.o(.text.xTaskResumeAll)
    i.GPIODirModeSet                         0x000032bc   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x000032e4   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00003454   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeGPIOOutput                  0x00003498   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinTypeUART                        0x000034b4   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.GPIOPinWrite                           0x000034d0   Section        0  gpio.o(i.GPIOPinWrite)
    i.SysCtlClockGet                         0x000034d8   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x0000362c   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00003654   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.__aeabi_errno_addr                     0x00003680   Section        0  errno.o(i.__aeabi_errno_addr)
    i.__scatterload_copy                     0x00003688   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00003696   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00003698   Section       14  handlers.o(i.__scatterload_zeroinit)
    g_ppui32GPIOIntMapBlizzard               0x000036a8   Data         192  gpio.o(.constdata)
    .constdata                               0x000036a8   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00003768   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x00003840   Data         144  gpio.o(.constdata)
    g_pui32VCOFrequencies                    0x000038d0   Data           8  sysctl.o(.constdata)
    .constdata                               0x000038d0   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x000038d8   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00003944   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x00003af4   Data          48  sysctl.o(.constdata)
    .constdata                               0x00003b24   Section      129  ctype_o.o(.constdata)
    table                                    0x00003ba8   Data           4  ctype_o.o(.constdata)
    .constdata                               0x00003ba8   Section        4  ctype_o.o(.constdata)
    .L.str.3                                 0x00003bac   Data           3  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003bac   Section        0  main.o(.rodata.str1.1)
    .L.str.7                                 0x00003baf   Data           5  main.o(.rodata.str1.1)
    .L.str.2                                 0x00003bb4   Data          21  main.o(.rodata.str1.1)
    .L.str.9                                 0x00003bc9   Data          11  main.o(.rodata.str1.1)
    .L.str                                   0x00003bd4   Data          48  main.o(.rodata.str1.1)
    .L.str.5                                 0x00003c04   Data          11  main.o(.rodata.str1.1)
    .L.str.4                                 0x00003c0f   Data          17  main.o(.rodata.str1.1)
    .L.str.8                                 0x00003c20   Data          17  main.o(.rodata.str1.1)
    .L.str.1                                 0x00003c31   Data          17  main.o(.rodata.str1.1)
    .L.str.10                                0x00003c42   Data          28  main.o(.rodata.str1.1)
    .L.str.12                                0x00003c5e   Data          23  main.o(.rodata.str1.1)
    .L.str.6                                 0x00003c73   Data           2  main.o(.rodata.str1.1)
    .L.str.11                                0x00003c75   Data          23  main.o(.rodata.str1.1)
    .L.str.13                                0x00003c8c   Data          28  main.o(.rodata.str1.1)
    .L.str                                   0x00003ca8   Data          72  myinitiation.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003ca8   Section        0  myinitiation.o(.rodata.str1.1)
    .L.str                                   0x00003cf0   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003cf0   Section        0  tasks.o(.rodata.str1.1)
    _errno                                   0x20000000   Data           4  errno.o(.data)
    .data                                    0x20000000   Section        4  errno.o(.data)
    uxCriticalNesting                        0x20000010   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000010   Section        0  port.o(.data.uxCriticalNesting)
    pvPortMalloc.pucAlignedHeap              0x20000018   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000018   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxDelayedTaskList                        0x20000020   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000020   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000024   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000024   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000028   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000028   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000090   Data        4096  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000090   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20001090   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20001090   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20001094   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20001094   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20001098   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20001098   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x2000109c   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x2000109c   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200010a0   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200010a0   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200010a4   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200010a4   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200010a8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200010a8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200010ac   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200010ac   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200010b0   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200010b0   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x200010b4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200010b4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200010c8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200010c8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x200010dc   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200010dc   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200010e4   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200010e4   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x200010e8   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x200010e8   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x200010ec   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200010ec   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200010f0   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200010f0   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200010f4   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200010f4   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200010f8   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200010f8   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000110c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000110c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20001110   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20001110   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20001124   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20001124   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20001138   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20001138   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20001140   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20001140   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20001148   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    SysCtlDelay                              0x00000281   Thumb Code     6  sysctl.o(.emb_text)
    Reset_Handler                            0x00000289   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000293   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000297   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000299   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x0000029d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x000002a5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000385   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000385   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000385   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003a9   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003a9   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003a9   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003b7   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003b7   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003b7   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003bb   Thumb Code    18  memseta.o(.text)
    strlen                                   0x000003cd   Thumb Code    14  strlen.o(.text)
    atoi                                     0x000003db   Thumb Code    26  atoi.o(.text)
    strtol                                   0x000003f5   Thumb Code   112  strtol.o(.text)
    __scatterload                            0x00000465   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000465   Thumb Code     0  init.o(.text)
    __rt_ctype_table                         0x00000489   Thumb Code     4  ctype_o.o(.text)
    _strtoul                                 0x00000491   Thumb Code   158  _strtoul.o(.text)
    _chval                                   0x0000052f   Thumb Code    28  _chval.o(.text)
    ADC0_Init                                0x0000054d   Thumb Code   150  myinitiation.o(.text.ADC0_Init)
    Display_Task                             0x000005e5   Thumb Code   100  main.o(.text.Display_Task)
    InitTask                                 0x00000649   Thumb Code    26  main.o(.text.InitTask)
    LCD_Command                              0x00000665   Thumb Code   150  lcd.o(.text.LCD_Command)
    LCD_Cursor                               0x000006fd   Thumb Code    56  lcd.o(.text.LCD_Cursor)
    LCD_Print                                0x00000735   Thumb Code    92  lcd.o(.text.LCD_Print)
    LCD_Show                                 0x00000791   Thumb Code   152  lcd.o(.text.LCD_Show)
    LCD_init                                 0x00000829   Thumb Code   260  lcd.o(.text.LCD_init)
    LED_Init                                 0x0000092d   Thumb Code    50  myinitiation.o(.text.LED_Init)
    PendSV_Handler                           0x00000961   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000009d1   Thumb Code    36  port.o(.text.SVC_Handler)
    Setpoint_Task                            0x000009f5   Thumb Code   266  main.o(.text.Setpoint_Task)
    SysTick_Handler                          0x00000b01   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000b3d   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    Temp_Measure_Task                        0x00000c49   Thumb Code   342  main.o(.text.Temp_Measure_Task)
    Toggle_BLUE_LED                          0x00000da1   Thumb Code    48  myinitiation.o(.text.Toggle_BLUE_LED)
    Toggle_GREEN_LED                         0x00000dd1   Thumb Code    48  myinitiation.o(.text.Toggle_GREEN_LED)
    Toggle_RED_LED                           0x00000e01   Thumb Code    48  myinitiation.o(.text.Toggle_RED_LED)
    UART0_Init                               0x00000e31   Thumb Code   140  myinitiation.o(.text.UART0_Init)
    UARTCharPut                              0x00000ebd   Thumb Code    36  myinitiation.o(.text.UARTCharPut)
    UARTConfigSetExpClk                      0x00000ee1   Thumb Code   116  myinitiation.o(.text.UARTConfigSetExpClk)
    UARTDisable                              0x00000f55   Thumb Code    46  myinitiation.o(.text.UARTDisable)
    UARTEnable                               0x00000f85   Thumb Code    30  myinitiation.o(.text.UARTEnable)
    UARTFIFODisable                          0x00000fa5   Thumb Code    18  myinitiation.o(.text.UARTFIFODisable)
    UART_Print                               0x00000fb9   Thumb Code    44  myinitiation.o(.text.UART_Print)
    eTaskConfirmSleepModeStatus              0x00000fe5   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    itoa                                     0x00001065   Thumb Code   192  myinitiation.o(.text.itoa)
    main                                     0x00001125   Thumb Code   216  main.o(.text.main)
    pvPortMalloc                             0x00001b61   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001c21   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00001c81   Thumb Code    72  list.o(.text.uxListRemove)
    vListInitialise                          0x00001cc9   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001cf9   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001d09   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x00001d75   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00001dc5   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00001e1d   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001e69   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001e8d   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00001f05   Thumb Code   524  port.o(.text.vPortSuppressTicksAndSleep)
    vTaskInternalSetTimeOutState             0x00002111   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002135   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002145   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskStartScheduler                      0x00002189   Thumb Code   170  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00002235   Thumb Code    76  tasks.o(.text.vTaskStepTick)
    vTaskSuspend                             0x00002281   Thumb Code   378  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x000023fd   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x0000240d   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x000024cd   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00002625   Thumb Code   204  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x000026f1   Thumb Code   186  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x000027ad   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00002a21   Thumb Code   476  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002bfd   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002cf9   Thumb Code   152  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002d91   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x00002dc9   Thumb Code   440  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002f81   Thumb Code   250  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x0000307d   Thumb Code   198  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003145   Thumb Code   376  tasks.o(.text.xTaskResumeAll)
    GPIODirModeSet                           0x000032bd   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x000032e5   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00003455   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeGPIOOutput                    0x00003499   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinTypeUART                          0x000034b5   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    GPIOPinWrite                             0x000034d1   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    SysCtlClockGet                           0x000034d9   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x0000362d   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00003655   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    __aeabi_errno_addr                       0x00003681   Thumb Code     4  errno.o(i.__aeabi_errno_addr)
    __rt_errno_addr                          0x00003681   Thumb Code     0  errno.o(i.__aeabi_errno_addr)
    __scatterload_copy                       0x00003689   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00003697   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00003699   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __ctype_table                            0x00003b24   Data         129  ctype_o.o(.constdata)
    uxTopUsedPriority                        0x00003cf8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00003cfc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003d1c   Number         0  anon$$obj.o(Region$$Table)
    AlarmValue                               0x20000004   Data           4  main.o(.data.AlarmValue)
    SystemCoreClock                          0x20000008   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    setpoint                                 0x2000000c   Data           4  main.o(.data.setpoint)
    pxCurrentTCB                             0x2000001c   Data           4  tasks.o(.bss.pxCurrentTCB)
    temp_C                                   0x2000008c   Data           4  main.o(.bss.temp_C)
    xLCDQueue                                0x200010e0   Data           4  main.o(.bss.xLCDQueue)
    xUARTQueue                               0x2000113c   Data           4  main.o(.bss.xUARTQueue)
    __initial_sp                             0x20001348   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000289

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003d38, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003d1c, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          249    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO         1410  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO         1423    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO         1426    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1428    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1430    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO         1431    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1433    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1435    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO         1424    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x00000006   Code   RO         1052    .emb_text           driverlib.lib(sysctl.o)
    0x00000286   0x00000286   0x00000002   PAD
    0x00000288   0x00000288   0x000000fc   Code   RO          250  * .text               startup_tm4c123.o
    0x00000384   0x00000384   0x00000024   Code   RO         1413    .text               mc_w.l(memcpya.o)
    0x000003a8   0x000003a8   0x00000024   Code   RO         1415    .text               mc_w.l(memseta.o)
    0x000003cc   0x000003cc   0x0000000e   Code   RO         1417    .text               mc_w.l(strlen.o)
    0x000003da   0x000003da   0x0000001a   Code   RO         1421    .text               mc_w.l(atoi.o)
    0x000003f4   0x000003f4   0x00000070   Code   RO         1444    .text               mc_w.l(strtol.o)
    0x00000464   0x00000464   0x00000024   Code   RO         1446    .text               mc_w.l(init.o)
    0x00000488   0x00000488   0x00000008   Code   RO         1448    .text               mc_w.l(ctype_o.o)
    0x00000490   0x00000490   0x0000009e   Code   RO         1476    .text               mc_w.l(_strtoul.o)
    0x0000052e   0x0000052e   0x0000001c   Code   RO         1478    .text               mc_w.l(_chval.o)
    0x0000054a   0x0000054a   0x00000002   PAD
    0x0000054c   0x0000054c   0x00000096   Code   RO          212    .text.ADC0_Init     myinitiation.o
    0x000005e2   0x000005e2   0x00000002   PAD
    0x000005e4   0x000005e4   0x00000064   Code   RO            8    .text.Display_Task  main.o
    0x00000648   0x00000648   0x0000001a   Code   RO            2    .text.InitTask      main.o
    0x00000662   0x00000662   0x00000002   PAD
    0x00000664   0x00000664   0x00000096   Code   RO          233    .text.LCD_Command   lcd.o
    0x000006fa   0x000006fa   0x00000002   PAD
    0x000006fc   0x000006fc   0x00000038   Code   RO          237    .text.LCD_Cursor    lcd.o
    0x00000734   0x00000734   0x0000005c   Code   RO          239    .text.LCD_Print     lcd.o
    0x00000790   0x00000790   0x00000098   Code   RO          235    .text.LCD_Show      lcd.o
    0x00000828   0x00000828   0x00000104   Code   RO          231    .text.LCD_init      lcd.o
    0x0000092c   0x0000092c   0x00000032   Code   RO          204    .text.LED_Init      myinitiation.o
    0x0000095e   0x0000095e   0x00000002   PAD
    0x00000960   0x00000960   0x00000064   Code   RO          309    .text.PendSV_Handler  port.o
    0x000009c4   0x000009c4   0x0000000c   PAD
    0x000009d0   0x000009d0   0x00000024   Code   RO          293    .text.SVC_Handler   port.o
    0x000009f4   0x000009f4   0x0000010a   Code   RO            4    .text.Setpoint_Task  main.o
    0x00000afe   0x00000afe   0x00000002   PAD
    0x00000b00   0x00000b00   0x0000003c   Code   RO          311    .text.SysTick_Handler  port.o
    0x00000b3c   0x00000b3c   0x0000010c   Code   RO          261    .text.SystemInit    system_tm4c123.o
    0x00000c48   0x00000c48   0x00000156   Code   RO            6    .text.Temp_Measure_Task  main.o
    0x00000d9e   0x00000d9e   0x00000002   PAD
    0x00000da0   0x00000da0   0x00000030   Code   RO          206    .text.Toggle_BLUE_LED  myinitiation.o
    0x00000dd0   0x00000dd0   0x00000030   Code   RO          208    .text.Toggle_GREEN_LED  myinitiation.o
    0x00000e00   0x00000e00   0x00000030   Code   RO          210    .text.Toggle_RED_LED  myinitiation.o
    0x00000e30   0x00000e30   0x0000008c   Code   RO          214    .text.UART0_Init    myinitiation.o
    0x00000ebc   0x00000ebc   0x00000024   Code   RO          162    .text.UARTCharPut   myinitiation.o
    0x00000ee0   0x00000ee0   0x00000074   Code   RO          116    .text.UARTConfigSetExpClk  myinitiation.o
    0x00000f54   0x00000f54   0x0000002e   Code   RO          118    .text.UARTDisable   myinitiation.o
    0x00000f82   0x00000f82   0x00000002   PAD
    0x00000f84   0x00000f84   0x0000001e   Code   RO          120    .text.UARTEnable    myinitiation.o
    0x00000fa2   0x00000fa2   0x00000002   PAD
    0x00000fa4   0x00000fa4   0x00000012   Code   RO          126    .text.UARTFIFODisable  myinitiation.o
    0x00000fb6   0x00000fb6   0x00000002   PAD
    0x00000fb8   0x00000fb8   0x0000002c   Code   RO          218    .text.UART_Print    myinitiation.o
    0x00000fe4   0x00000fe4   0x00000080   Code   RO          525    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00001064   0x00001064   0x000000c0   Code   RO          216    .text.itoa          myinitiation.o
    0x00001124   0x00001124   0x000000d8   Code   RO           10    .text.main          main.o
    0x000011fc   0x000011fc   0x000000fc   Code   RO          449    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000012f8   0x000012f8   0x00000116   Code   RO          437    .text.prvAddNewTaskToReadyList  tasks.o
    0x0000140e   0x0000140e   0x00000002   PAD
    0x00001410   0x00001410   0x0000005a   Code   RO          565    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0000146a   0x0000146a   0x00000002   PAD
    0x0000146c   0x0000146c   0x00000042   Code   RO          386    .text.prvCopyDataFromQueue  queue.o
    0x000014ae   0x000014ae   0x00000002   PAD
    0x000014b0   0x000014b0   0x000000cc   Code   RO          372    .text.prvCopyDataToQueue  queue.o
    0x0000157c   0x0000157c   0x00000018   Code   RO          441    .text.prvDeleteTCB  tasks.o
    0x00001594   0x00001594   0x0000007c   Code   RO          567    .text.prvGetExpectedIdleTime  tasks.o
    0x00001610   0x00001610   0x0000009a   Code   RO          475    .text.prvIdleTask   tasks.o
    0x000016aa   0x000016aa   0x00000002   PAD
    0x000016ac   0x000016ac   0x0000004e   Code   RO          352    .text.prvInitialiseNewQueue  queue.o
    0x000016fa   0x000016fa   0x00000002   PAD
    0x000016fc   0x000016fc   0x00000128   Code   RO          435    .text.prvInitialiseNewTask  tasks.o
    0x00001824   0x00001824   0x0000008e   Code   RO          563    .text.prvInitialiseTaskLists  tasks.o
    0x000018b2   0x000018b2   0x00000002   PAD
    0x000018b4   0x000018b4   0x00000028   Code   RO          388    .text.prvIsQueueEmpty  queue.o
    0x000018dc   0x000018dc   0x0000002e   Code   RO          376    .text.prvIsQueueFull  queue.o
    0x0000190a   0x0000190a   0x00000002   PAD
    0x0000190c   0x0000190c   0x000000d8   Code   RO          374    .text.prvNotifyQueueSetContainer  queue.o
    0x000019e4   0x000019e4   0x00000028   Code   RO          301    .text.prvPortStartFirstTask  port.o
    0x00001a0c   0x00001a0c   0x0000003c   Code   RO          443    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001a48   0x00001a48   0x0000004c   Code   RO          291    .text.prvTaskExitError  port.o
    0x00001a94   0x00001a94   0x000000cc   Code   RO          378    .text.prvUnlockQueue  queue.o
    0x00001b60   0x00001b60   0x000000c0   Code   RO          330    .text.pvPortMalloc  heap_1.o
    0x00001c20   0x00001c20   0x0000005e   Code   RO          289    .text.pxPortInitialiseStack  port.o
    0x00001c7e   0x00001c7e   0x00000002   PAD
    0x00001c80   0x00001c80   0x00000048   Code   RO          280    .text.uxListRemove  list.o
    0x00001cc8   0x00001cc8   0x0000002e   Code   RO          272    .text.vListInitialise  list.o
    0x00001cf6   0x00001cf6   0x00000002   PAD
    0x00001cf8   0x00001cf8   0x0000000e   Code   RO          274    .text.vListInitialiseItem  list.o
    0x00001d06   0x00001d06   0x00000002   PAD
    0x00001d08   0x00001d08   0x0000006a   Code   RO          278    .text.vListInsert   list.o
    0x00001d72   0x00001d72   0x00000002   PAD
    0x00001d74   0x00001d74   0x0000003a   Code   RO          276    .text.vListInsertEnd  list.o
    0x00001dae   0x00001dae   0x00000002   PAD
    0x00001db0   0x00001db0   0x00000014   Code   RO          299    .text.vPortEnableVFP  port.o
    0x00001dc4   0x00001dc4   0x00000056   Code   RO          305    .text.vPortEnterCritical  port.o
    0x00001e1a   0x00001e1a   0x00000002   PAD
    0x00001e1c   0x00001e1c   0x0000004a   Code   RO          307    .text.vPortExitCritical  port.o
    0x00001e66   0x00001e66   0x00000002   PAD
    0x00001e68   0x00001e68   0x00000024   Code   RO          332    .text.vPortFree     heap_1.o
    0x00001e8c   0x00001e8c   0x00000078   Code   RO          297    .text.vPortSetupTimerInterrupt  port.o
    0x00001f04   0x00001f04   0x0000020c   Code   RO          313    .text.vPortSuppressTicksAndSleep  port.o
    0x00002110   0x00002110   0x00000024   Code   RO          515    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002134   0x00002134   0x0000000e   Code   RO          519    .text.vTaskMissedYield  tasks.o
    0x00002142   0x00002142   0x00000002   PAD
    0x00002144   0x00002144   0x00000042   Code   RO          505    .text.vTaskPlaceOnEventList  tasks.o
    0x00002186   0x00002186   0x00000002   PAD
    0x00002188   0x00002188   0x000000aa   Code   RO          473    .text.vTaskStartScheduler  tasks.o
    0x00002232   0x00002232   0x00000002   PAD
    0x00002234   0x00002234   0x0000004c   Code   RO          499    .text.vTaskStepTick  tasks.o
    0x00002280   0x00002280   0x0000017a   Code   RO          463    .text.vTaskSuspend  tasks.o
    0x000023fa   0x000023fa   0x00000002   PAD
    0x000023fc   0x000023fc   0x00000010   Code   RO          447    .text.vTaskSuspendAll  tasks.o
    0x0000240c   0x0000240c   0x000000be   Code   RO          465    .text.vTaskSwitchContext  tasks.o
    0x000024ca   0x000024ca   0x00000002   PAD
    0x000024cc   0x000024cc   0x00000156   Code   RO          295    .text.xPortStartScheduler  port.o
    0x00002622   0x00002622   0x00000002   PAD
    0x00002624   0x00002624   0x000000cc   Code   RO          350    .text.xQueueGenericCreate  queue.o
    0x000026f0   0x000026f0   0x000000ba   Code   RO          348    .text.xQueueGenericReset  queue.o
    0x000027aa   0x000027aa   0x00000002   PAD
    0x000027ac   0x000027ac   0x00000274   Code   RO          364    .text.xQueueGenericSend  queue.o
    0x00002a20   0x00002a20   0x000001dc   Code   RO          384    .text.xQueueReceive  queue.o
    0x00002bfc   0x00002bfc   0x000000fc   Code   RO          517    .text.xTaskCheckForTimeOut  tasks.o
    0x00002cf8   0x00002cf8   0x00000098   Code   RO          433    .text.xTaskCreate   tasks.o
    0x00002d90   0x00002d90   0x00000038   Code   RO          537    .text.xTaskGetSchedulerState  tasks.o
    0x00002dc8   0x00002dc8   0x000001b8   Code   RO          479    .text.xTaskIncrementTick  tasks.o
    0x00002f80   0x00002f80   0x000000fa   Code   RO          541    .text.xTaskPriorityDisinherit  tasks.o
    0x0000307a   0x0000307a   0x00000002   PAD
    0x0000307c   0x0000307c   0x000000c6   Code   RO          509    .text.xTaskRemoveFromEventList  tasks.o
    0x00003142   0x00003142   0x00000002   PAD
    0x00003144   0x00003144   0x00000178   Code   RO          451    .text.xTaskResumeAll  tasks.o
    0x000032bc   0x000032bc   0x00000028   Code   RO          603    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x000032e4   0x000032e4   0x00000170   Code   RO          615    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00003454   0x00003454   0x00000044   Code   RO          616    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x00003498   0x00003498   0x0000001c   Code   RO          627    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x000034b4   0x000034b4   0x0000001c   Code   RO          639    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x000034d0   0x000034d0   0x00000006   Code   RO          645    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x000034d6   0x000034d6   0x00000002   PAD
    0x000034d8   0x000034d8   0x00000154   Code   RO         1055    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x0000362c   0x0000362c   0x00000028   Code   RO         1086    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00003654   0x00003654   0x0000002c   Code   RO         1090    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00003680   0x00003680   0x00000008   Code   RO         1437    i.__aeabi_errno_addr  mc_w.l(errno.o)
    0x00003688   0x00003688   0x0000000e   Code   RO         1482    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00003696   0x00003696   0x00000002   Code   RO         1483    i.__scatterload_null  mc_w.l(handlers.o)
    0x00003698   0x00003698   0x0000000e   Code   RO         1484    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000036a6   0x000036a6   0x00000002   PAD
    0x000036a8   0x000036a8   0x00000228   Data   RO          648    .constdata          driverlib.lib(gpio.o)
    0x000038d0   0x000038d0   0x00000254   Data   RO         1108    .constdata          driverlib.lib(sysctl.o)
    0x00003b24   0x00003b24   0x00000081   Data   RO         1449    .constdata          mc_w.l(ctype_o.o)
    0x00003ba5   0x00003ba5   0x00000003   PAD
    0x00003ba8   0x00003ba8   0x00000004   Data   RO         1450    .constdata          mc_w.l(ctype_o.o)
    0x00003bac   0x00003bac   0x000000fc   Data   RO           14    .rodata.str1.1      main.o
    0x00003ca8   0x00003ca8   0x00000048   Data   RO          221    .rodata.str1.1      myinitiation.o
    0x00003cf0   0x00003cf0   0x00000005   Data   RO          585    .rodata.str1.1      tasks.o
    0x00003cf5   0x00003cf5   0x00000003   PAD
    0x00003cf8   0x00003cf8   0x00000004   Data   RO          570    .rodata.uxTopUsedPriority  tasks.o
    0x00003cfc   0x00003cfc   0x00000020   Data   RO         1481    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00003d20, Size: 0x00001348, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003d20   0x00000004   Data   RW         1440    .data               mc_w.l(errno.o)
    0x20000004   0x00003d24   0x00000004   Data   RW           13    .data.AlarmValue    main.o
    0x20000008   0x00003d28   0x00000004   Data   RW          263    .data.SystemCoreClock  system_tm4c123.o
    0x2000000c   0x00003d2c   0x00000004   Data   RW           12    .data.setpoint      main.o
    0x20000010   0x00003d30   0x00000004   Data   RW          319    .data.uxCriticalNesting  port.o
    0x20000014   0x00003d34   0x00000004   PAD
    0x20000018        -       0x00000004   Zero   RW          338    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x2000001c        -       0x00000004   Zero   RW          569    .bss.pxCurrentTCB   tasks.o
    0x20000020        -       0x00000004   Zero   RW          580    .bss.pxDelayedTaskList  tasks.o
    0x20000024        -       0x00000004   Zero   RW          581    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000028        -       0x00000064   Zero   RW          571    .bss.pxReadyTasksLists  tasks.o
    0x2000008c        -       0x00000004   Zero   RW           16    .bss.temp_C         main.o
    0x20000090        -       0x00001000   Zero   RW          339    .bss.ucHeap         heap_1.o
    0x20001090        -       0x00000001   Zero   RW          317    .bss.ucMaxSysCallPriority  port.o
    0x20001091   0x00003d34   0x00000003   PAD
    0x20001094        -       0x00000004   Zero   RW          318    .bss.ulMaxPRIGROUPValue  port.o
    0x20001098        -       0x00000004   Zero   RW          322    .bss.ulStoppedTimerCompensation  port.o
    0x2000109c        -       0x00000004   Zero   RW          321    .bss.ulTimerCountsForOneTick  port.o
    0x200010a0        -       0x00000004   Zero   RW          576    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200010a4        -       0x00000004   Zero   RW          575    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200010a8        -       0x00000004   Zero   RW          578    .bss.uxSchedulerSuspended  tasks.o
    0x200010ac        -       0x00000004   Zero   RW          573    .bss.uxTaskNumber   tasks.o
    0x200010b0        -       0x00000004   Zero   RW          572    .bss.uxTopReadyPriority  tasks.o
    0x200010b4        -       0x00000014   Zero   RW          590    .bss.xDelayedTaskList1  tasks.o
    0x200010c8        -       0x00000014   Zero   RW          591    .bss.xDelayedTaskList2  tasks.o
    0x200010dc        -       0x00000004   Zero   RW          586    .bss.xIdleTaskHandle  tasks.o
    0x200010e0        -       0x00000004   Zero   RW           17    .bss.xLCDQueue      main.o
    0x200010e4        -       0x00000004   Zero   RW          320    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200010e8        -       0x00000004   Zero   RW          340    .bss.xNextFreeByte  heap_1.o
    0x200010ec        -       0x00000004   Zero   RW          587    .bss.xNextTaskUnblockTime  tasks.o
    0x200010f0        -       0x00000004   Zero   RW          589    .bss.xNumOfOverflows  tasks.o
    0x200010f4        -       0x00000004   Zero   RW          588    .bss.xPendedTicks   tasks.o
    0x200010f8        -       0x00000014   Zero   RW          584    .bss.xPendingReadyList  tasks.o
    0x2000110c        -       0x00000004   Zero   RW          577    .bss.xSchedulerRunning  tasks.o
    0x20001110        -       0x00000014   Zero   RW          582    .bss.xSuspendedTaskList  tasks.o
    0x20001124        -       0x00000014   Zero   RW          574    .bss.xTasksWaitingTermination  tasks.o
    0x20001138        -       0x00000004   Zero   RW          579    .bss.xTickCount     tasks.o
    0x2000113c        -       0x00000004   Zero   RW           15    .bss.xUARTQueue     main.o
    0x20001140        -       0x00000004   Zero   RW          583    .bss.xYieldPending  tasks.o
    0x20001144   0x00003d34   0x00000004   PAD
    0x20001148        -       0x00000200   Zero   RW          247    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       228          0          0          0       4104       1731   heap_1.o
       710          0          0          0          0       1086   lcd.o
       296          0          0          0          0       2324   list.o
       950          0        252          8         12       2003   main.o
       966          0         72          0          0      17028   myinitiation.o
      1572         16          0          4         17       4884   port.o
      2348          0          0          0          0      16631   queue.o
       252         10        620          0        512       5452   startup_tm4c123.o
       268          0          0          4          0       6732   system_tm4c123.o
      4218          0          9          0        260      26116   tasks.o

    ----------------------------------------------------------------------
     11884         38        988         16       4916      83987   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        76         12          3          0         11          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       538         22        552          0          0       9120   gpio.o
       430         44        596          0          0       4054   sysctl.o
        28          0          0          0          0         68   _chval.o
       158          0          0          0          0         92   _strtoul.o
        26          0          0          0          0         80   atoi.o
         8          4        133          0          0         68   ctype_o.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
         8          4          0          4          0         68   errno.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        14          0          0          0          0         68   strlen.o
       112          0          0          0          0         88   strtol.o

    ----------------------------------------------------------------------
      1488         90       1284          4          0      13950   Library Totals
         8          0          3          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       968         66       1148          0          0      13174   driverlib.lib
       512         24        133          4          0        776   mc_w.l

    ----------------------------------------------------------------------
      1488         90       1284          4          0      13950   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13372        128       2272         20       4916      97053   Grand Totals
     13372        128       2272         20       4916      97053   ELF Image Totals
     13372        128       2272         20          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15644 (  15.28kB)
    Total RW  Size (RW Data + ZI Data)              4936 (   4.82kB)
    Total ROM Size (Code + RO Data + RW Data)      15664 (  15.30kB)

==============================================================================

